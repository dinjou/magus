version: '3.9'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: magus_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-magus}
      POSTGRES_USER: ${POSTGRES_USER:-magus_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme_dev}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-magus_user} -d ${POSTGRES_DB:-magus}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - magus_network
    restart: unless-stopped

  # Redis Cache & Celery Broker
  redis:
    image: redis:7-alpine
    container_name: magus_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme_dev}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - magus_network
    restart: unless-stopped

  # Django Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: magus_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn krono.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120 --access-logfile - --error-logfile -"
    volumes:
      - ./krono:/app/krono
      - static_files:/app/krono/staticfiles
      - media_files:/app/krono/media
    environment:
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-dev-key-change-in-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-magus_user}:${POSTGRES_PASSWORD:-changeme_dev}@db:5432/${POSTGRES_DB:-magus}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-changeme_dev}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-changeme_dev}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-changeme_dev}@redis:6379/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,web}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173}
      - EMAIL_BACKEND=${EMAIL_BACKEND:-django.core.mail.backends.console.EmailBackend}
      - EMAIL_HOST=${EMAIL_HOST:-}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - magus_network
    restart: unless-stopped

  # Celery Worker
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: magus_celery
    command: celery -A krono worker --loglevel=info --concurrency=2
    volumes:
      - ./krono:/app/krono
      - media_files:/app/krono/media
    environment:
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-dev-key-change-in-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-magus_user}:${POSTGRES_PASSWORD:-changeme_dev}@db:5432/${POSTGRES_DB:-magus}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-changeme_dev}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-changeme_dev}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-changeme_dev}@redis:6379/0
      - EMAIL_BACKEND=${EMAIL_BACKEND:-django.core.mail.backends.console.EmailBackend}
      - EMAIL_HOST=${EMAIL_HOST:-}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - magus_network
    restart: unless-stopped

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: magus_celery_beat
    command: celery -A krono beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./krono:/app/krono
    environment:
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-dev-key-change-in-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-magus_user}:${POSTGRES_PASSWORD:-changeme_dev}@db:5432/${POSTGRES_DB:-magus}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-changeme_dev}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-changeme_dev}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-changeme_dev}@redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - magus_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: magus_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_files:/app/staticfiles:ro
      - media_files:/app/media:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - magus_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_files:
    driver: local
  media_files:
    driver: local

networks:
  magus_network:
    driver: bridge

