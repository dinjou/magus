# Generated by Django 5.0.7 on 2025-10-15 07:10

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Descriptive name (e.g., 'Home Automation', 'iOS Shortcuts')", max_length=100)),
                ('key_prefix', models.CharField(help_text='First 8 characters of key for display', max_length=8)),
                ('key_hash', models.CharField(help_text='SHA-256 hash of the API key', max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('can_read', models.BooleanField(default=True)),
                ('can_write', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_for_exports', models.EmailField(blank=True, help_text='Email address for receiving CSV exports', max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('timezone', models.CharField(default='America/Denver', max_length=50)),
                ('theme', models.CharField(choices=[('dark', 'Dark'), ('light', 'Light'), ('aqua', 'Aqua (Mac OS X)'), ('aero', 'Aero (Windows 7)'), ('metro', 'Metro (Windows 8)'), ('luna', 'Luna (Windows XP)')], default='dark', max_length=20)),
                ('long_press_duration', models.FloatField(default=1.5, help_text='Duration in seconds for long-press gesture')),
                ('pinned_tasks_visible', models.IntegerField(default=4, help_text='Number of pinned tasks to show in quick grid')),
                ('enable_live_activities', models.BooleanField(default=True)),
                ('openai_api_key_encrypted', models.CharField(blank=True, help_text='Encrypted OpenAI API key for AI insights', max_length=255)),
                ('last_heartbeat', models.DateTimeField(blank=True, null=True)),
                ('clock_in_time', models.DateTimeField(blank=True, null=True)),
                ('clock_out_time', models.DateTimeField(blank=True, null=True)),
                ('active_session', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('email_to', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('is_active', models.BooleanField(default=True)),
                ('last_sent', models.DateTimeField(blank=True, null=True)),
                ('next_scheduled', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_exports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['next_scheduled'],
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('emoji', models.CharField(default='ðŸ“Š', max_length=10)),
                ('color', models.CharField(default='#3A8E61', help_text='Hex color code', max_length=7)),
                ('is_pinned', models.BooleanField(default=False, help_text='Show in quick start grid')),
                ('is_archived', models.BooleanField(default=False, help_text='Soft delete - hidden from UI')),
                ('sort_order', models.IntegerField(default=0, help_text='Display order (lower = first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_types', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('interrupted', models.BooleanField(default=False, help_text='True if task was stopped by starting another task')),
                ('is_manual_entry', models.BooleanField(default=False, help_text='True if created/edited manually vs tracked live')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('edited_by_user', models.BooleanField(default=False, help_text='True if user manually edited this entry')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
                ('task_type', models.ForeignKey(help_text='Task type cannot be deleted if tasks reference it', on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='magus.tasktype')),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='tasktype',
            index=models.Index(fields=['user', 'is_archived'], name='magus_taskt_user_id_5a084c_idx'),
        ),
        migrations.AddIndex(
            model_name='tasktype',
            index=models.Index(fields=['user', 'is_pinned'], name='magus_taskt_user_id_803b01_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tasktype',
            unique_together={('user', 'name')},
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', '-start_time'], name='magus_task_user_id_97a5a4_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'end_time'], name='magus_task_user_id_e860c8_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'task_type', '-start_time'], name='magus_task_user_id_94f6e7_idx'),
        ),
    ]
